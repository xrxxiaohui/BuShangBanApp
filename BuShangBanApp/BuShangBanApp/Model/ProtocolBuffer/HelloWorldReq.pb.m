// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "HelloWorldReq.pb.h"

@implementation HelloWorldReqRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [HelloWorldReqRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface HelloWorld ()
@property int32_t id;
@property (retain) NSString* str;
@property int32_t opt;
@end

@implementation HelloWorld

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) value {
  hasId_ = !!value;
}
@synthesize id;
- (BOOL) hasStr {
  return !!hasStr_;
}
- (void) setHasStr:(BOOL) value {
  hasStr_ = !!value;
}
@synthesize str;
- (BOOL) hasOpt {
  return !!hasOpt_;
}
- (void) setHasOpt:(BOOL) value {
  hasOpt_ = !!value;
}
@synthesize opt;
- (void) dealloc {
  self.str = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.id = 0;
    self.str = @"";
    self.opt = 0;
  }
  return self;
}
static HelloWorld* defaultHelloWorldInstance = nil;
+ (void) initialize {
  if (self == [HelloWorld class]) {
    defaultHelloWorldInstance = [[HelloWorld alloc] init];
  }
}
+ (HelloWorld*) defaultInstance {
  return defaultHelloWorldInstance;
}
- (HelloWorld*) defaultInstance {
  return defaultHelloWorldInstance;
}
- (BOOL) isInitialized {
  if (!self.hasId) {
    return NO;
  }
  if (!self.hasStr) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt32:1 value:self.id];
  }
  if (self.hasStr) {
    [output writeString:2 value:self.str];
  }
  if (self.hasOpt) {
    [output writeInt32:3 value:self.opt];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasId) {
    size += computeInt32Size(1, self.id);
  }
  if (self.hasStr) {
    size += computeStringSize(2, self.str);
  }
  if (self.hasOpt) {
    size += computeInt32Size(3, self.opt);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (HelloWorld*) parseFromData:(NSData*) data {
  return (HelloWorld*)[[[HelloWorld builder] mergeFromData:data] build];
}
+ (HelloWorld*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HelloWorld*)[[[HelloWorld builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (HelloWorld*) parseFromInputStream:(NSInputStream*) input {
  return (HelloWorld*)[[[HelloWorld builder] mergeFromInputStream:input] build];
}
+ (HelloWorld*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HelloWorld*)[[[HelloWorld builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HelloWorld*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (HelloWorld*)[[[HelloWorld builder] mergeFromCodedInputStream:input] build];
}
+ (HelloWorld*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (HelloWorld*)[[[HelloWorld builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (HelloWorld_Builder*) builder {
  return [[[HelloWorld_Builder alloc] init] autorelease];
}
+ (HelloWorld_Builder*) builderWithPrototype:(HelloWorld*) prototype {
  return [[HelloWorld builder] mergeFrom:prototype];
}
- (HelloWorld_Builder*) builder {
  return [HelloWorld builder];
}
@end

@interface HelloWorld_Builder()
@property (retain) HelloWorld* result;
@end

@implementation HelloWorld_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[HelloWorld alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (HelloWorld_Builder*) clear {
  self.result = [[[HelloWorld alloc] init] autorelease];
  return self;
}
- (HelloWorld_Builder*) clone {
  return [HelloWorld builderWithPrototype:result];
}
- (HelloWorld*) defaultInstance {
  return [HelloWorld defaultInstance];
}
- (HelloWorld*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (HelloWorld*) buildPartial {
  HelloWorld* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (HelloWorld_Builder*) mergeFrom:(HelloWorld*) other {
  if (other == [HelloWorld defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasStr) {
    [self setStr:other.str];
  }
  if (other.hasOpt) {
    [self setOpt:other.opt];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (HelloWorld_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (HelloWorld_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt32]];
        break;
      }
      case 18: {
        [self setStr:[input readString]];
        break;
      }
      case 24: {
        [self setOpt:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return result.hasId;
}
- (int32_t) id {
  return result.id;
}
- (HelloWorld_Builder*) setId:(int32_t) value {
  result.hasId = YES;
  result.id = value;
  return self;
}
- (HelloWorld_Builder*) clearId {
  result.hasId = NO;
  result.id = 0;
  return self;
}
- (BOOL) hasStr {
  return result.hasStr;
}
- (NSString*) str {
  return result.str;
}
- (HelloWorld_Builder*) setStr:(NSString*) value {
  result.hasStr = YES;
  result.str = value;
  return self;
}
- (HelloWorld_Builder*) clearStr {
  result.hasStr = NO;
  result.str = @"";
  return self;
}
- (BOOL) hasOpt {
  return result.hasOpt;
}
- (int32_t) opt {
  return result.opt;
}
- (HelloWorld_Builder*) setOpt:(int32_t) value {
  result.hasOpt = YES;
  result.opt = value;
  return self;
}
- (HelloWorld_Builder*) clearOpt {
  result.hasOpt = NO;
  result.opt = 0;
  return self;
}
@end

